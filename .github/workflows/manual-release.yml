name: Release Builder

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
        default: "0.1.0"
      app_name:
        description: "Application name (defaults to Quizleter)"
        required: false
        default: "Quizleter"
      prerelease:
        description: "Is this a pre-release?"
        required: true
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  build-release:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path -Path "requirements.txt" -PathType Leaf) {
              pip install -r requirements.txt
          }

      - name: Update version file
        shell: pwsh
        run: |
          $version_content = @"

          __version__ = "${{ github.event.inputs.version }}"
          __app_name__ = "${{ github.event.inputs.app_name }}"
          "@
                    Set-Content -Path quizlet_converter_version.py -Value $version_content

                - name: Build executable
                  run: |
                    pyinstaller --onefile --name "${{ github.event.inputs.app_name }}" --distpath ./dist --workpath ./build --specpath ./spec "${{ github.workspace }}\src\main.py"

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          name: "Release ${{ github.event.inputs.version }}"
          body: |
            - Version: ${{ github.event.inputs.version }}
            - App Name: ${{ github.event.inputs.app_name }}
            - Pre-release: ${{ github.event.inputs.prerelease }}
          files: |
            ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: actions/upload-artifact@v3
        with:
          name: release-assets
          path: ./dist/*

      - name: Notify success
        if: success()
        run: echo "Release ${{ github.event.inputs.version }} built and uploaded successfully."

      - name: Notify failure
        if: failure()
        run: echo "Release ${{ github.event.inputs.version }} failed."
